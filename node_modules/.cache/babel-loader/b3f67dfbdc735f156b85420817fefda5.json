{"ast":null,"code":"import _objectSpread from\"/home/aditya2020/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/home/aditya2020/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/aditya2020/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/aditya2020/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/aditya2020/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import Node from'./Node/node';import'./pathfinder.css';import{dijkstra,getNodesInShortestPath}from'../algorithms/dijkstra';var TOTAL_ROW=30;var TOTAL_COL=50;var Pathfinder=/*#__PURE__*/function(_Component){_inherits(Pathfinder,_Component);var _super=_createSuper(Pathfinder);function Pathfinder(){var _this;_classCallCheck(this,Pathfinder);_this=_super.call(this);_this.state={grid:[],mouseIsPressed:false,isSelectingStart:false,isSelectingEnd:false,isSelectingBarrier:true,startNodeRow:-1,startNodeCol:-1,endNodeRow:-1,endNodeCol:-1};return _this;}_createClass(Pathfinder,[{key:\"componentDidMount\",value:function componentDidMount(){var grid=getInitialGrid();this.setState({grid:grid});}},{key:\"handleMouseDown\",value:function handleMouseDown(row,col){if(!(this.state.isSelectingStart||this.state.isSelectingEnd)){var newGrid=getNewGridWithBarrierToggled(this.state.grid,row,col);this.setState({grid:newGrid,mouseIsPressed:true});}}},{key:\"handleMouseEnter\",value:function handleMouseEnter(row,col){if(!this.state.mouseIsPressed)return;if(this.state.isSelectingBarrier){var newGrid=getNewGridWithBarrierToggled(this.state.grid,row,col);this.setState({grid:newGrid});}}},{key:\"handleMouseUp\",value:function handleMouseUp(){this.setState({mouseIsPressed:false});}},{key:\"handleNodeClicked\",value:function handleNodeClicked(row,col){if(this.state.isSelectingStart){var newGrid=getNewGridWithStartNode(this.state.grid,row,col,this.state.startNodeRow,this.state.startNodeCol);this.setState({isSelectingStart:false,grid:newGrid,startNodeRow:row,startNodeCol:col});}else if(this.state.isSelectingEnd){var _newGrid=getNewGridWithEndNode(this.state.grid,row,col,this.state.endNodeRow,this.state.endNodeCol);this.setState({isSelectingEnd:false,grid:_newGrid,endNodeRow:row,endNodeCol:col});}}},{key:\"animateDijkstra\",value:function animateDijkstra(visitedNodesInOrder,nodesInShortestPathOrder){var _this2=this;var _loop=function _loop(i){if(i===visitedNodesInOrder.length){setTimeout(function(){_this2.animateShortestPath(nodesInShortestPathOrder);},10*i);return{v:void 0};}setTimeout(function(){var node=visitedNodesInOrder[i];if((node.row!==_this2.state.startNodeRow||node.col!==_this2.state.startNodeCol)&&(node.col!==_this2.state.endNodeCol||node.row!==_this2.state.endNodeRow)){document.getElementById(\"node-\".concat(node.row,\"-\").concat(node.col)).className='node node-visited';}},10*i);};for(var i=0;i<=visitedNodesInOrder.length;i++){var _ret=_loop(i);if(typeof _ret===\"object\")return _ret.v;}}},{key:\"animateShortestPath\",value:function animateShortestPath(nodesInShortestPathOrder){var _loop2=function _loop2(i){setTimeout(function(){var node=nodesInShortestPathOrder[i];document.getElementById(\"node-\".concat(node.row,\"-\").concat(node.col)).className='node node-shortest-path';},50*i);};for(var i=1;i<nodesInShortestPathOrder.length-1;i++){_loop2(i);}}},{key:\"visualizeDijkstra\",value:function visualizeDijkstra(){if(this.state.endNodeRow!==-1&&this.state.startNodeRow!==-1){var grid=this.state.grid;var startNode=grid[this.state.startNodeRow][this.state.startNodeCol];var finishNode=grid[this.state.endNodeRow][this.state.endNodeCol];var visitedNodesInOrder=dijkstra(grid,startNode,finishNode);var nodesInShortestPathOrder=getNodesInShortestPath(finishNode);this.animateDijkstra(visitedNodesInOrder,nodesInShortestPathOrder);}}},{key:\"toggleSelectingStart\",value:function toggleSelectingStart(){this.setState({isSelectingStart:true});}},{key:\"toggleSelectingEnd\",value:function toggleSelectingEnd(){this.setState({isSelectingEnd:true});}},{key:\"toggleSelectingBarriers\",value:function toggleSelectingBarriers(){this.setState({isSelectingBarrier:true});}},{key:\"clearGrid\",value:function clearGrid(){var newGrid=this.state.grid.slice();for(var row=0;row<TOTAL_ROW;row++){for(var col=0;col<TOTAL_COL;col++){var oldNode=newGrid[row][col];var newNode=_objectSpread(_objectSpread({},oldNode),{},{isStart:false,isFinish:false,isBarrier:false});newGrid[row][col]=newNode;document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className='node';}}this.setState({grid:newGrid,mouseIsPressed:false,isSelectingStart:false,isSelectingEnd:false,isSelectingBarrier:true,startNodeRow:-1,startNodeCol:-1,endNodeRow:-1,endNodeCol:-1});}},{key:\"render\",value:function render(){var _this3=this;var _this$state=this.state,grid=_this$state.grid,mouseIsPressed=_this$state.mouseIsPressed;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"nav\",{class:\"navbar navbar-expand-lg navbar-light bg-light\"},/*#__PURE__*/React.createElement(\"a\",{class:\"navbar-brand\"},\"Pathfinding Algorithms Visualizer\"),/*#__PURE__*/React.createElement(\"div\",{class:\"collapse navbar-collapse\",id:\"navbarSupportedContent\"},/*#__PURE__*/React.createElement(\"ul\",{class:\"navbar-nav mr-auto\"},/*#__PURE__*/React.createElement(\"li\",{class:\"nav-item dropdown\"},/*#__PURE__*/React.createElement(\"a\",{class:\"nav-item nav-link dropdown-toggle\",id:\"navbarDropdown\",role:\"button\",\"data-toggle\":\"dropdown\",\"aria-haspopup\":\"true\",\"aria-expanded\":\"false\"},\"Select Algorithm\"),/*#__PURE__*/React.createElement(\"div\",{class:\"dropdown-menu\",\"aria-labelledby\":\"navbarDropdown\"},/*#__PURE__*/React.createElement(\"button\",{class:\"btn dropdown-item\",onClick:function onClick(){return _this3.visualizeDijkstra();}},\"Dijkstra's Algorithm\"))),/*#__PURE__*/React.createElement(\"li\",{class:\"nav-item\"},/*#__PURE__*/React.createElement(\"button\",{class:\"btn btn-success navbar-btn\",onClick:function onClick(){return _this3.toggleSelectingStart();}},\"Select Start Node\")),/*#__PURE__*/React.createElement(\"li\",{class:\"nav-item\"},/*#__PURE__*/React.createElement(\"button\",{class:\"btn btn-danger navbar-btn\",onClick:function onClick(){return _this3.toggleSelectingEnd();}},\"Select End Node\")),/*#__PURE__*/React.createElement(\"li\",{class:\"nav-item\"},/*#__PURE__*/React.createElement(\"button\",{class:\"btn btn-dark navbar-btn\",onClick:function onClick(){return _this3.clearGrid();}},\"Clear Grid\"))))),/*#__PURE__*/React.createElement(\"div\",{className:\"gridContainer\"},/*#__PURE__*/React.createElement(\"div\",{className:\"grid\"},grid.map(function(row,rowIdx){return/*#__PURE__*/React.createElement(\"div\",{key:rowIdx,className:\"node-row\"},row.map(function(node,nodeIdx){var row=node.row,col=node.col,isFinish=node.isFinish,isStart=node.isStart,isBarrier=node.isBarrier;return/*#__PURE__*/React.createElement(Node,{row:row,col:col,isFinish:isFinish,isStart:isStart,isBarrier:isBarrier,key:nodeIdx,mouseIsPressed:mouseIsPressed,onMouseDown:function onMouseDown(row,col){return _this3.handleMouseDown(row,col);},onMouseEnter:function onMouseEnter(row,col){return _this3.handleMouseEnter(row,col);},onMouseUp:function onMouseUp(){return _this3.handleMouseUp();},onMouseClick:function onMouseClick(row,col){return _this3.handleNodeClicked(row,col);}});}));}))));}}]);return Pathfinder;}(Component);export{Pathfinder as default};var getInitialGrid=function getInitialGrid(){var grid=[];for(var row=0;row<TOTAL_ROW;row++){var currentRow=[];for(var col=0;col<TOTAL_COL;col++){currentRow.push(createNode(col,row));}grid.push(currentRow);}return grid;};var createNode=function createNode(col,row){return{col:col,row:row,isStart:false,isFinish:false,distance:Infinity,isVisited:false,isBarrier:false,previousNode:null};};var getNewGridWithBarrierToggled=function getNewGridWithBarrierToggled(grid,row,col){var newGrid=grid.slice();var node=newGrid[row][col];var newNode=_objectSpread(_objectSpread({},node),{},{isBarrier:!node.isBarrier});newGrid[row][col]=newNode;return newGrid;};var getNewGridWithStartNode=function getNewGridWithStartNode(grid,row,col,oldRow,oldCol){var newGrid=grid.slice();if(oldRow!==-1){var oldStart=newGrid[oldRow][oldCol];var cleanOldStart=_objectSpread(_objectSpread({},oldStart),{},{isStart:false});newGrid[oldRow][oldCol]=cleanOldStart;}var node=newGrid[row][col];var newNode=_objectSpread(_objectSpread({},node),{},{isStart:true});newGrid[row][col]=newNode;return newGrid;};var getNewGridWithEndNode=function getNewGridWithEndNode(grid,row,col,oldRow,oldCol){var newGrid=grid.slice();if(oldRow!==-1){var oldFinish=newGrid[oldRow][oldCol];var cleanOldFinish=_objectSpread(_objectSpread({},oldFinish),{},{isFinish:false});newGrid[oldRow][oldCol]=cleanOldFinish;}var node=newGrid[row][col];var newNode=_objectSpread(_objectSpread({},node),{},{isFinish:true});newGrid[row][col]=newNode;return newGrid;};","map":{"version":3,"sources":["/home/aditya2020/my-app/src/pathfinder/pathfinder.jsx"],"names":["React","Component","Node","dijkstra","getNodesInShortestPath","TOTAL_ROW","TOTAL_COL","Pathfinder","state","grid","mouseIsPressed","isSelectingStart","isSelectingEnd","isSelectingBarrier","startNodeRow","startNodeCol","endNodeRow","endNodeCol","getInitialGrid","setState","row","col","newGrid","getNewGridWithBarrierToggled","getNewGridWithStartNode","getNewGridWithEndNode","visitedNodesInOrder","nodesInShortestPathOrder","i","length","setTimeout","animateShortestPath","node","document","getElementById","className","startNode","finishNode","animateDijkstra","slice","oldNode","newNode","isStart","isFinish","isBarrier","visualizeDijkstra","toggleSelectingStart","toggleSelectingEnd","clearGrid","map","rowIdx","nodeIdx","handleMouseDown","handleMouseEnter","handleMouseUp","handleNodeClicked","currentRow","push","createNode","distance","Infinity","isVisited","previousNode","oldRow","oldCol","oldStart","cleanOldStart","oldFinish","cleanOldFinish"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Node from './Node/node';\nimport './pathfinder.css';\nimport {dijkstra, getNodesInShortestPath} from '../algorithms/dijkstra';\n\nconst TOTAL_ROW = 30;\nconst TOTAL_COL = 50;\n\nexport default class Pathfinder extends Component\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tgrid: [],\n\t\t\tmouseIsPressed: false,\n\t\t\tisSelectingStart: false,\n\t\t\tisSelectingEnd: false,\n\t\t\tisSelectingBarrier: true,\n\t\t\tstartNodeRow: -1,\n\t\t\tstartNodeCol: -1,\n\t\t\tendNodeRow: -1,\n\t\t\tendNodeCol: -1\n\t\t};\n\t}\n\n\tcomponentDidMount() \n\t{\n\t\tconst grid = getInitialGrid();\n\t\tthis.setState({grid});\n\t}\n\n\thandleMouseDown(row, col) \n\t{\n\t\tif(!(this.state.isSelectingStart || this.state.isSelectingEnd))\n\t\t{\n\t\t\tconst newGrid = getNewGridWithBarrierToggled(this.state.grid, row, col);\n\t\t\tthis.setState({grid: newGrid, mouseIsPressed: true});\n\t\t}\n\t}\n\n\thandleMouseEnter(row, col) \n\t{\n\t\tif (!this.state.mouseIsPressed) return;\n\t\tif(this.state.isSelectingBarrier)\n\t\t{\n\t\t\tconst newGrid = getNewGridWithBarrierToggled(this.state.grid, row, col);\n\t\t\tthis.setState({grid: newGrid});\n\t\t}\n\t}\n\n\thandleMouseUp() \n\t{\n\t\tthis.setState({mouseIsPressed: false});\n\t}\n\n\thandleNodeClicked(row, col)\n\t{\n\t\tif(this.state.isSelectingStart)\n\t\t{\n\t\t\tconst newGrid = getNewGridWithStartNode(this.state.grid, row, col, this.state.startNodeRow, this.state.startNodeCol);\n\t\t\tthis.setState({isSelectingStart: false, grid: newGrid, startNodeRow: row, startNodeCol: col});\n\t\t}\n\t\telse if (this.state.isSelectingEnd)\n\t\t{\n\t\t\tconst newGrid = getNewGridWithEndNode(this.state.grid, row, col,this.state.endNodeRow, this.state.endNodeCol);\n\t\t\tthis.setState({isSelectingEnd: false, grid: newGrid, endNodeRow: row, endNodeCol: col});\n\t\t}\n\t\t\n\t}\n\n\tanimateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder) \n\t{\n\t\tfor (let i = 0; i <= visitedNodesInOrder.length; i++) \n\t\t{\n\t\t\tif (i === visitedNodesInOrder.length) \n\t\t\t{\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.animateShortestPath(nodesInShortestPathOrder);\n\t\t\t\t}, 10 * i);\n\t\t\t\t\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsetTimeout(() => {\n\t\t\tconst node = visitedNodesInOrder[i];\n\t\t\tif((node.row !== this.state.startNodeRow || node.col !== this.state.startNodeCol) && (node.col !== this.state.endNodeCol || node.row !== this.state.endNodeRow))\n\t\t\t\t{\n\t\t\t\t\tdocument.getElementById(`node-${node.row}-${node.col}`).className =\n\t\t\t\t\t\t'node node-visited';\n\t\t\t\t}\t\n\t\t\t}, 10 * i);\n\t\t}\n\t}\n\t\n\tanimateShortestPath(nodesInShortestPathOrder) \n\t{\n\t\tfor (let i = 1; i < nodesInShortestPathOrder.length -1; i++) \n\t\t{\n\t\t\tsetTimeout(() => \n\t\t\t{\n\t\t\t\tconst node = nodesInShortestPathOrder[i];\n\t\t\t\tdocument.getElementById(`node-${node.row}-${node.col}`).className =\n\t\t\t\t'node node-shortest-path';\n\t\t\t}, 50 * i);\n\t\t}\n\t}\n\t\t\n\tvisualizeDijkstra() \n\t{\n\t\tif(this.state.endNodeRow !== -1 && this.state.startNodeRow !== -1)\n\t\t{\n\t\t\tconst {grid} = this.state;\n\t\t\tconst startNode = grid[this.state.startNodeRow][this.state.startNodeCol];\n\t\t\tconst finishNode = grid[this.state.endNodeRow][this.state.endNodeCol];\n\t\t\tconst visitedNodesInOrder = dijkstra(grid, startNode, finishNode);\n\t\t\tconst nodesInShortestPathOrder = getNodesInShortestPath(finishNode);\n\t\t\tthis.animateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder);\n\t\t}\n\t}\n\n\ttoggleSelectingStart()\n\t{\n\t\tthis.setState({isSelectingStart: true});\n\t}\n\n\ttoggleSelectingEnd()\n\t{\n\t\tthis.setState({isSelectingEnd: true});\n\t}\n\n\ttoggleSelectingBarriers()\n\t{\n\t\tthis.setState({isSelectingBarrier: true});\n\t}\n\n\tclearGrid()\n\t{\n\t\tconst newGrid = this.state.grid.slice();\n\t\tfor(let row = 0; row < TOTAL_ROW; row++)\n\t\t{\n\t\t\tfor(let col = 0; col < TOTAL_COL; col++)\n\t\t\t{\n\t\t\t\tconst oldNode = newGrid[row][col];\n\t\t\t\tconst newNode = {\n\t\t\t\t\t...oldNode,\n\t\t\t\t\tisStart: false,\n\t\t\t\t\tisFinish: false,\n\t\t\t\t\tisBarrier: false,\n\t\t\t\t};\n\t\t\t\tnewGrid[row][col] = newNode;\n\t\t\t\tdocument.getElementById(`node-${row}-${col}`).className = 'node';\n\t\t\t}\n\t\t}\n\t\tthis.setState({\n\t\t\tgrid: newGrid,\n\t\t\tmouseIsPressed: false,\n\t\t\tisSelectingStart: false,\n\t\t\tisSelectingEnd: false,\n\t\t\tisSelectingBarrier: true,\n\t\t\tstartNodeRow: -1,\n\t\t\tstartNodeCol: -1,\n\t\t\tendNodeRow: -1,\n\t\t\tendNodeCol: -1 \n\t\t})\n\t}\n\n\trender() \n\t{\n\t\tconst {grid, mouseIsPressed} = this.state;\n\t\treturn (\n\t\t<>\n\t\t\t<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n\t\t\t\t<a class=\"navbar-brand\">Pathfinding Algorithms Visualizer</a>\n\t\t\t\t<div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n\t\t\t\t\t<ul class=\"navbar-nav mr-auto\">\n\t\t\t\t\t\t<li class=\"nav-item dropdown\">\n\t\t\t\t\t\t\t<a class=\"nav-item nav-link dropdown-toggle\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n\t\t\t\t\t\t\t\tSelect Algorithm\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t<div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n\t\t\t\t\t\t\t\t<button class=\"btn dropdown-item\" onClick={() => this.visualizeDijkstra()}>\n\t\t\t\t\t\t\t\t\tDijkstra's Algorithm\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li class = \"nav-item\">\n\t\t\t\t\t\t\t<button class = \"btn btn-success navbar-btn\" onClick={() => this.toggleSelectingStart()}>Select Start Node</button>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li class = \"nav-item\">\n\t\t\t\t\t\t\t<button class = \"btn btn-danger navbar-btn\" onClick={() => this.toggleSelectingEnd()}>Select End Node</button>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li class = \"nav-item\">\n\t\t\t\t\t\t\t<button class = \"btn btn-dark navbar-btn\" onClick={() => this.clearGrid()}>Clear Grid</button>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</nav>\n\t\t\t<div className=\"gridContainer\">\n\t\t\t\t<div className=\"grid\">\n\t\t\t\t\t{grid.map((row, rowIdx) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div key={rowIdx} className = \"node-row\">\n\t\t\t\t\t\t{row.map((node, nodeIdx) => {\n\t\t\t\t\t\t\tconst {row, col, isFinish, isStart, isBarrier} = node;\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Node\n\t\t\t\t\t\t\t\t\trow = {row}\n\t\t\t\t\t\t\t\t\tcol = {col}\n\t\t\t\t\t\t\t\t\tisFinish = {isFinish}\n\t\t\t\t\t\t\t\t\tisStart = {isStart}\n\t\t\t\t\t\t\t\t\tisBarrier = {isBarrier}\n\t\t\t\t\t\t\t\t\tkey = {nodeIdx}\n\t\t\t\t\t\t\t\t\tmouseIsPressed = {mouseIsPressed}\n\t\t\t\t\t\t\t\t\tonMouseDown = {(row, col) => this.handleMouseDown(row, col)}\n\t\t\t\t\t\t\t\t\tonMouseEnter = {(row, col) => this.handleMouseEnter(row, col)}\n\t\t\t\t\t\t\t\t\tonMouseUp = {() => this.handleMouseUp()}\n\t\t\t\t\t\t\t\t\tonMouseClick = {(row, col) => this.handleNodeClicked(row, col)} \n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t\t);\n\t}\n}\n\nconst getInitialGrid = () => {\n\tconst grid = [];\n\tfor (let row = 0; row < TOTAL_ROW; row++) \n\t{\n\t\tconst currentRow = [];\n\t\tfor (let col = 0; col < TOTAL_COL; col++) \n\t\t{\n\t\t\tcurrentRow.push(createNode(col, row));\n\t\t}\n\t\tgrid.push(currentRow);\n\t}\n\n\treturn grid;\n};\n\nconst createNode = (col, row) => {\n\treturn {\n\t\tcol,\n\t\trow,\n\t\tisStart: false,\n\t\tisFinish: false,\n\t\tdistance: Infinity,\n\t\tisVisited: false,\n\t\tisBarrier: false,\n\t\tpreviousNode: null,\n\t};\n};\n\nconst getNewGridWithBarrierToggled = (grid, row, col) => {\n\tconst newGrid = grid.slice();\n\tconst node = newGrid[row][col];\n\tconst newNode = {\n\t\t...node,\n\t\tisBarrier: !node.isBarrier,\n\t};\n\tnewGrid[row][col] = newNode;\n\treturn newGrid;\n};\n\nconst getNewGridWithStartNode = (grid, row, col, oldRow, oldCol) => {\n\tconst newGrid = grid.slice();\n\tif(oldRow !== -1)\n\t{\n\t\tconst oldStart = newGrid[oldRow][oldCol];\n\t\tconst cleanOldStart = {\n\t\t\t...oldStart,\n\t\t\tisStart: false,\n\t\t};\n\t\tnewGrid[oldRow][oldCol] = cleanOldStart;\n\t}\n\n\tconst node = newGrid[row][col];\n\tconst newNode = {\n\t\t...node,\n\t\tisStart: true,\n\t};\n\n\tnewGrid[row][col] = newNode;\n\treturn newGrid;\n}\n\nconst getNewGridWithEndNode = (grid, row, col, oldRow, oldCol) => {\n\tconst newGrid = grid.slice();\n\tif(oldRow !== -1)\n\t{\n\t\tconst oldFinish = newGrid[oldRow][oldCol];\n\t\tconst cleanOldFinish = {\n\t\t\t...oldFinish,\n\t\t\tisFinish: false,\n\t\t};\n\t\tnewGrid[oldRow][oldCol] = cleanOldFinish;\n\t}\n\n\tconst node = newGrid[row][col];\n\tconst newNode = {\n\t\t...node,\n\t\tisFinish: true,\n\t};\n\n\tnewGrid[row][col] = newNode;\n\treturn newGrid;\n}\n"]},"metadata":{},"sourceType":"module"}